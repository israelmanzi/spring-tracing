services:
  app:
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web-app
    ports:
      - "8080:8080"
    networks:
      - tracing_net
    environment:
      OTEL_SERVICE_NAME: "automobile-service"
      OTEL_RESOURCE_ATTRIBUTES: "service=automobile-service,env=dev"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4318"
      OTEL_LOGS_EXPORTER: "otlp"
    entrypoint: [
      "java",
      "-javaagent:/otel-agent.jar",
      "-jar",
      "-Dotel.service.name=web-app-israel",
      "-Dotel.traces.exporter=otlp",
      "-Dotel.metrics.exporter=otlp",
      "-Dotel.logs.exporter=otlp",
      "spring-boot-docker-postgres.jar"
    ]

    volumes:
      - ./otel-agent.jar:/otel-agent.jar

  db:
    container_name: postgres-db
    image: postgres:14-alpine
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - tracing_net
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: automobiles
      PGDATA: /var/lib/postgresql/data/pgdata

networks:
  tracing_net:
    external: true

volumes:
  postgres_data:
    driver: local
